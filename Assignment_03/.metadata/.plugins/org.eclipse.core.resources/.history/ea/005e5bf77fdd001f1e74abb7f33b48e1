import org.json.JSONArray;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.HashSet;
import java.util.Scanner;
import java.util.Set;

public class TumblrAPIClient {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the Tumblr blog name (e.g., 'good'): ");
        String blogName = scanner.nextLine();

        String range = scanner.nextLine();

        String apiUrl = "https://bad.tumblr.com/api/read/json?type=photo&num=5&start=1";

        fetchTumblrData(apiUrl, range);
    }

    private static void fetchTumblrData(String apiUrl, String range) {
        try {
            HttpURLConnection connection = (HttpURLConnection) new URL(apiUrl).openConnection();
            connection.setRequestMethod("GET");
            connection.setConnectTimeout(5000);
            connection.setReadTimeout(5000);
            BufferedReader in = new BufferedReader(new InputStreamReader(connection.getInputStream()));
            StringBuilder response = new StringBuilder();
            String inputLine;

            while ((inputLine = in.readLine()) != null) {
                response.append(inputLine);
            }
            in.close();
            String jsonResponseStr = response.toString();
            if (jsonResponseStr.startsWith("var tumblr_api_read = ")) {
                jsonResponseStr = jsonResponseStr.substring("var tumblr_api_read = ".length());
            }
            JSONObject jsonObject = new JSONObject(jsonResponseStr);

            JSONObject tumblelog = jsonObject.getJSONObject("tumblelog");
            String title = tumblelog.optString("title", "N/A");
            String name = tumblelog.optString("name", "N/A");
            String description = tumblelog.optString("description", "N/A");
            int totalPosts = jsonObject.optInt("posts-total", 0);

            // Print blog information
            System.out.println("Blog Information:");
            System.out.printf("| %-20s | %-50s |\n", "Title:", title);
            System.out.printf("| %-20s | %-50s |\n", "Name:", name);
            System.out.printf("| %-20s | %-50s |\n", "Description:", description);
            System.out.printf("| %-20s | %-50d |\n", "No of Posts:", totalPosts);
            System.out.println();
            
            JSONArray posts = jsonObject.getJSONArray("posts");

            for (int i = 0; i < posts.length(); i++) {
                JSONObject post = posts.getJSONObject(i);

                Set<String> imageUrls = new HashSet<>();

                String highestQualityTopLevelUrl = null;
                int maxResolutionTopLevel = 0;
                for (String key : post.keySet()) {
                    if (key.startsWith("photo-url-")) {
                        String url = post.getString(key);
                        int resolution = Integer.parseInt(key.replace("photo-url-", ""));
                        if (resolution > maxResolutionTopLevel) {
                            maxResolutionTopLevel = resolution;
                            highestQualityTopLevelUrl = url;
                        }
                    }
                }
                if (highestQualityTopLevelUrl != null) {
                    imageUrls.add(highestQualityTopLevelUrl);
                }
                
                if (post.has("photos")) {
                    JSONArray photosArray = post.getJSONArray("photos");
                    for (int j = 0; j < photosArray.length(); j++) {
                        JSONObject photo = photosArray.getJSONObject(j);

                        // Find the highest quality image in each photo object
                        String highestQualityUrl = null;
                        int maxResolution = 0;

                        for (String key : photo.keySet()) {
                            if (key.startsWith("photo-url-")) {
                                String url = photo.getString(key);
                                int resolution = Integer.parseInt(key.replace("photo-url-", ""));
                                if (resolution > maxResolution) {
                                    maxResolution = resolution;
                                    highestQualityUrl = url;
                                }
                            }
                        }

                        if (highestQualityUrl != null) {
                            imageUrls.add(highestQualityUrl);
                        }
                    }
                }

                if(imageUrls.size()>0) {
                    System.out.print(i+1 + ". ");
                }
                for (String url : imageUrls) {
                    System.out.println(url);
                }
                System.out.println();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
